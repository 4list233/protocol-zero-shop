// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User accounts for NextAuth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?   @unique
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
  comments      Comment[]
  playDates     PlayDate[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Application-specific models
model Post {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  title       String
  videoUrl    String
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String
  comments    Comment[]
  likeCount   Int       @default(0)
}

model Comment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  text      String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
}

model PlayDate {
  id          String   @id @default(cuid())
  playDate    DateTime @db.Date
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  guestCount  Int      @default(0)

  @@unique([playDate, userId])
}
